(function (_0x29375a, _0x27ea50) {
  const _0x28cb2a = _0x1fa7,
    _0x1a12b8 = _0x29375a();
  while (!![]) {
    try {
      const _0x2342c1 =
        parseInt(_0x28cb2a(0x17a)) / 0x1 +
        -parseInt(_0x28cb2a(0x16b)) / 0x2 +
        -parseInt(_0x28cb2a(0x164)) / 0x3 +
        (parseInt(_0x28cb2a(0x167)) / 0x4) *
          (parseInt(_0x28cb2a(0x185)) / 0x5) +
        (-parseInt(_0x28cb2a(0x163)) / 0x6) *
          (parseInt(_0x28cb2a(0x156)) / 0x7) +
        (parseInt(_0x28cb2a(0x140)) / 0x8) *
          (-parseInt(_0x28cb2a(0x143)) / 0x9) +
        (-parseInt(_0x28cb2a(0x138)) / 0xa) *
          (-parseInt(_0x28cb2a(0x188)) / 0xb);
      if (_0x2342c1 === _0x27ea50) break;
      else _0x1a12b8["push"](_0x1a12b8["shift"]());
    } catch (_0x2d56e8) {
      _0x1a12b8["push"](_0x1a12b8["shift"]());
    }
  }
})(_0x27d4, 0x4848e);
const _0x21cb09 = _0x37ef;
(function (_0x326475, _0x175da7) {
  const _0x2d9550 = _0x1fa7,
    _0x53961d = _0x37ef,
    _0x4f5742 = _0x326475();
  while (!![]) {
    try {
      const _0x500134 =
        (-parseInt(_0x53961d(0x18c)) / 0x1) *
          (parseInt(_0x53961d(0x16e)) / 0x2) +
        (parseInt(_0x53961d(0x17e)) / 0x3) *
          (-parseInt(_0x53961d(0x172)) / 0x4) +
        (-parseInt(_0x53961d(0x1a3)) / 0x5) *
          (-parseInt(_0x53961d(0x173)) / 0x6) +
        parseInt(_0x53961d(0x185)) / 0x7 +
        (-parseInt(_0x53961d(0x18e)) / 0x8) *
          (-parseInt(_0x53961d(0x179)) / 0x9) +
        (parseInt(_0x53961d(0x151)) / 0xa) *
          (-parseInt(_0x53961d(0x1a0)) / 0xb) +
        (parseInt(_0x53961d(0x14a)) / 0xc) * (parseInt(_0x53961d(0x169)) / 0xd);
      if (_0x500134 === _0x175da7) break;
      else _0x4f5742[_0x2d9550(0x183)](_0x4f5742["shift"]());
    } catch (_0x1d3cfa) {
      _0x4f5742["push"](_0x4f5742[_0x2d9550(0x175)]());
    }
  }
})(_0x163e, 0xce05b);
function _0x1de8() {
  const _0x1c093b = _0x1fa7,
    _0x1b5029 = _0x37ef,
    _0xfc35e2 = [
      _0x1c093b(0x170),
      _0x1b5029(0x150),
      _0x1b5029(0x1a4),
      "?\x20Error\x20claiming\x20daily\x20points:\x20",
      _0x1b5029(0x19a),
      _0x1c093b(0x136),
      _0x1c093b(0x14c),
      _0x1b5029(0x183),
      _0x1c093b(0x13d),
      _0x1b5029(0x1a8),
      _0x1c093b(0x14d),
      _0x1c093b(0x15d),
      _0x1b5029(0x18b),
      _0x1b5029(0x163),
      _0x1b5029(0x1ab),
      _0x1b5029(0x161),
      _0x1b5029(0x188),
      _0x1b5029(0x1a9),
      "?\x20Referral\x20ID\x20matches\x20with\x20Author.",
      _0x1b5029(0x17a),
      _0x1b5029(0x152),
      _0x1b5029(0x1a7),
      _0x1b5029(0x193),
      _0x1b5029(0x191),
      _0x1b5029(0x180),
      _0x1b5029(0x19b),
      _0x1b5029(0x16a),
      _0x1b5029(0x14c),
      _0x1b5029(0x162),
      "toLocaleString",
      _0x1b5029(0x170),
      _0x1b5029(0x1a5),
      _0x1b5029(0x189),
      _0x1b5029(0x17c),
      _0x1b5029(0x165),
      _0x1b5029(0x177),
      "??\x20Checking\x20referral\x20status...",
      _0x1b5029(0x15e),
      "padEnd",
      _0x1b5029(0x18d),
      _0x1b5029(0x168),
      _0x1b5029(0x17d),
      _0x1b5029(0x1a2),
      _0x1b5029(0x164),
      _0x1b5029(0x171),
      _0x1b5029(0x19d),
      _0x1b5029(0x15c),
      _0x1b5029(0x194),
      "140861VTnxgH",
      _0x1b5029(0x153),
      _0x1b5029(0x178),
      "174614UWdMcL",
      _0x1b5029(0x175),
      _0x1b5029(0x174),
      _0x1b5029(0x155),
      _0x1c093b(0x15f),
      _0x1b5029(0x167),
      "referral_id",
      _0x1b5029(0x18a),
      _0x1b5029(0x196),
      _0x1b5029(0x159),
      _0x1c093b(0x180),
      _0x1c093b(0x174),
      _0x1b5029(0x197),
      _0x1b5029(0x15d),
      _0x1b5029(0x156),
      _0x1b5029(0x16f),
      _0x1c093b(0x13a),
      _0x1b5029(0x14b),
      _0x1b5029(0x1a6),
      _0x1b5029(0x187),
      _0x1b5029(0x157),
      _0x1b5029(0x14e),
      _0x1c093b(0x14a),
      _0x1b5029(0x184),
      _0x1b5029(0x17f),
      _0x1b5029(0x181),
      _0x1b5029(0x186),
      _0x1b5029(0x1ad),
      _0x1b5029(0x154),
      "https://api.assisterr.ai/incentive/auth/login/",
      _0x1c093b(0x173),
      _0x1b5029(0x1ac),
      _0x1b5029(0x15a),
      _0x1b5029(0x160),
      _0x1b5029(0x17b),
    ];
  return (
    (_0x1de8 = function () {
      return _0xfc35e2;
    }),
    _0x1de8()
  );
}
const _0x289136 = _0x1310;
(function (_0x4d8491, _0x6a3140) {
  const _0x56e74b = _0x1fa7,
    _0x2edc38 = _0x37ef,
    _0x24313b = _0x1310,
    _0x5e1ef0 = _0x4d8491();
  while (!![]) {
    try {
      const _0x420a81 =
        parseInt(_0x24313b(0x182)) / 0x1 +
        parseInt(_0x24313b(0x178)) / 0x2 +
        -parseInt(_0x24313b(0x197)) / 0x3 +
        (-parseInt(_0x24313b(0x184)) / 0x4) *
          (-parseInt(_0x24313b(0x166)) / 0x5) +
        (parseInt(_0x24313b(0x19c)) / 0x6) *
          (parseInt(_0x24313b(0x17f)) / 0x7) +
        -parseInt(_0x24313b(0x1ab)) / 0x8 +
        (-parseInt(_0x24313b(0x165)) / 0x9) *
          (parseInt(_0x24313b(0x162)) / 0xa);
      if (_0x420a81 === _0x6a3140) break;
      else _0x5e1ef0[_0x2edc38(0x156)](_0x5e1ef0[_0x56e74b(0x175)]());
    } catch (_0x392cbd) {
      _0x5e1ef0[_0x2edc38(0x156)](_0x5e1ef0[_0x2edc38(0x176)]());
    }
  }
})(_0x1de8, 0x38e44);
const fs = require("fs"),
  axios = require(_0x289136(0x18f)),
  { Keypair } = require(_0x289136(0x195)),
  nacl = require(_0x21cb09(0x14d)),
  checkInvites = false;
  delay = (_0x50cd15) =>
    new Promise((_0x3f4171) => setTimeout(_0x3f4171, _0x50cd15)),
  timestamp = () => new Date()[_0x21cb09(0x19c)](),
  formatTime = (_0x332052) => new Date(_0x332052)[_0x289136(0x16c)](),
  log = (_0x365fa2) =>
    console[_0x289136(0x15d)]("[" + timestamp() + "]\x20" + _0x365fa2),
  encodeBase58 = (_0x4c9cab) => {
    const _0x5cd7df = _0x289136,
      _0xf6baeb = _0x5cd7df(0x192),
      _0x315d4f = 0x3a;
    let _0x2f2a1c = BigInt(0x0);
    for (
      let _0x665308 = 0x0;
      _0x665308 < _0x4c9cab[_0x5cd7df(0x19a)];
      _0x665308++
    ) {
      _0x2f2a1c = (_0x2f2a1c << BigInt(0x8)) + BigInt(_0x4c9cab[_0x665308]);
    }
    let _0x53a16e = "";
    while (_0x2f2a1c > 0x0) {
      const _0x40e802 = _0x2f2a1c % BigInt(_0x315d4f);
      (_0x2f2a1c = _0x2f2a1c / BigInt(_0x315d4f)),
        (_0x53a16e = _0xf6baeb[Number(_0x40e802)] + _0x53a16e);
    }
    for (
      let _0x37a4af = 0x0;
      _0x37a4af < _0x4c9cab[_0x5cd7df(0x19a)] && _0x4c9cab[_0x37a4af] === 0x0;
      _0x37a4af++
    ) {
      _0x53a16e = "1" + _0x53a16e;
    }
    return _0x53a16e;
  },
  decodeBase58 = (_0x4f39e2) => {
    const _0x137dc3 = _0x289136,
      _0x39b541 = _0x137dc3(0x192),
      _0x1d35da = 0x3a;
    let _0x162e36 = BigInt(0x0);
    for (const _0x9693d6 of _0x4f39e2) {
      const _0x38a681 = _0x39b541[_0x137dc3(0x16d)](_0x9693d6);
      if (_0x38a681 === -0x1) throw new Error(_0x137dc3(0x187));
      _0x162e36 = _0x162e36 * BigInt(_0x1d35da) + BigInt(_0x38a681);
    }
    const _0x23a78b = [];
    while (_0x162e36 > 0x0) {
      _0x23a78b[_0x137dc3(0x190)](Number(_0x162e36 % BigInt(0x100))),
        (_0x162e36 = _0x162e36 / BigInt(0x100));
    }
    for (const _0x318c57 of _0x4f39e2) {
      if (_0x318c57 === "1") _0x23a78b[_0x137dc3(0x190)](0x0);
      else break;
    }
    return new Uint8Array(_0x23a78b[_0x137dc3(0x198)]());
  },
  getRandomUserAgent = () => {
    const _0x331a55 = _0x1fa7,
      _0x487f35 = _0x289136,
      _0x2e1c97 = fs[_0x487f35(0x16f)](_0x331a55(0x155), _0x487f35(0x164))
        [_0x487f35(0x17c)]("\x0a")
        [_0x487f35(0x1a9)](Boolean);
    return _0x2e1c97[
      Math[_0x487f35(0x17b)](
        Math[_0x487f35(0x163)]() * _0x2e1c97[_0x487f35(0x19a)],
      )
    ][_0x487f35(0x18e)]();
  },
  loadAccounts = () => {
    const _0x3a7bf4 = _0x21cb09,
      _0x1b3c12 = _0x289136;
    log(_0x3a7bf4(0x190));
    const _0x33fbad = fs[_0x1b3c12(0x16f)](_0x1b3c12(0x15f));
    return JSON[_0x3a7bf4(0x16b)](_0x33fbad);
  },
  saveAccounts = (_0x2afea7) => {
    const _0x225aba = _0x289136;
    log(_0x225aba(0x18c)),
      fs[_0x225aba(0x19d)](
        _0x225aba(0x15f),
        JSON[_0x225aba(0x1a0)](_0x2afea7, null, 0x2),
      ),
      log(_0x225aba(0x176));
  },
  loginAndGetTokens = async (_0x181f4f, _0x3613a8) => {
    const _0x16174a = _0x21cb09,
      _0x2bd8da = _0x289136;
    try {
      const _0x490a53 = decodeBase58(_0x181f4f[_0x2bd8da(0x1a3)]),
        _0xd3e9cd = Keypair[_0x16174a(0x199)](_0x490a53),
        _0x5e2dbc = _0xd3e9cd[_0x2bd8da(0x15b)][_0x2bd8da(0x18a)](),
        _0x4621ee = await getMessage(_0x3613a8),
        _0x1b25e0 = signMessage(_0x4621ee, _0x181f4f[_0x2bd8da(0x1a3)]),
        _0xe328a5 = await login(_0x4621ee, _0x1b25e0, _0x5e2dbc, _0x3613a8);
      return log(_0x2bd8da(0x16e)), _0xe328a5["access_token"];
    } catch (_0x4e5aaa) {
      log(_0x2bd8da(0x174));
      throw _0x4e5aaa;
    }
  },
  getMessage = async (_0x44de5f) => {
    const _0x55813f = _0x21cb09,
      _0x1b02fe = _0x289136;
    log(_0x1b02fe(0x160));
    try {
      const _0x171ea8 = await axios[_0x1b02fe(0x1a4)](_0x55813f(0x192), {
        headers: { "User-Agent": _0x44de5f },
      });
      return log(_0x1b02fe(0x168)), _0x171ea8[_0x1b02fe(0x18d)];
    } catch (_0x3364d4) {
      log(_0x1b02fe(0x179), _0x3364d4);
      throw _0x3364d4;
    }
  },
  signMessage = (_0x4f82cb, _0x395cf9) => {
    const _0x5cccaa = _0x21cb09,
      _0x4f4dd0 = _0x289136;
    log(_0x4f4dd0(0x169));
    const _0x1df4de = decodeBase58(_0x395cf9),
      _0x1768bb = Keypair[_0x4f4dd0(0x1aa)](_0x1df4de),
      _0x23f645 = nacl[_0x4f4dd0(0x16a)][_0x4f4dd0(0x15a)](
        Buffer[_0x4f4dd0(0x193)](_0x4f82cb),
        _0x1768bb[_0x4f4dd0(0x171)],
      ),
      _0x3e4293 = encodeBase58(_0x23f645);
    return log(_0x5cccaa(0x18f)), _0x3e4293;
  },
  login = async (_0x52bbc8, _0x1853da, _0x39cbf8, _0x52ae7c) => {
    const _0x192263 = _0x289136;
    log(_0x192263(0x15c));
    try {
      const _0x698415 = {
          message: _0x52bbc8,
          signature: _0x1853da,
          key: _0x39cbf8,
        },
        _0x42f43c = await axios[_0x192263(0x172)](_0x192263(0x19f), _0x698415, {
          headers: { "User-Agent": _0x52ae7c },
        });
      return _0x42f43c[_0x192263(0x18d)];
    } catch (_0x6bc95a) {
      throw _0x6bc95a;
    }
  },
  checkReferralStatus = async (_0x1beed8, _0x1a6ede, _0x56ba08) => {
    const _0x35be99 = _0x1fa7,
      _0x331e3f = _0x21cb09,
      _0x519355 = _0x289136;
    if (!checkInvites) return log(_0x331e3f(0x14f)), !![];
    const _0x46fac2 = _0x35be99(0x146);
    log(_0x519355(0x173));
    try {
      const _0x16d4e9 = await axios[_0x519355(0x1a4)](_0x331e3f(0x1aa), {
          headers: {
            Authorization: _0x331e3f(0x157) + _0x1beed8,
            "User-Agent": _0x1a6ede,
          },
        }),
        _0x366ad7 = _0x16d4e9[_0x519355(0x18d)];
      return _0x366ad7[_0x519355(0x188)] === _0x46fac2
        ? (log(_0x519355(0x161)), !![])
        : (log(_0x519355(0x19b)), ![]);
    } catch (_0x4905ac) {
      return log(_0x519355(0x1a7) + _0x4905ac[_0x331e3f(0x1ac)]), ![];
    }
  },
  claimDailyPoints = async (_0x548932, _0x2647a0, _0x21a005) => {
    const _0x4c0afb = _0x21cb09,
      _0x1cd7d0 = _0x289136;
    log(_0x1cd7d0(0x17e));
    try {
      const _0x1e13a8 = await axios[_0x1cd7d0(0x172)](
        _0x4c0afb(0x15f),
        {},
        {
          headers: {
            Authorization: _0x4c0afb(0x157) + _0x548932,
            "User-Agent": _0x2647a0,
          },
        },
      );
      log(_0x1cd7d0(0x1ac) + _0x1e13a8[_0x1cd7d0(0x18d)][_0x4c0afb(0x19e)]);
      const _0x28c749 = 0xc * 0x3c * 0x3c * 0x3e8 + 0x5 * 0x3c * 0x3e8;
      (_0x21a005[_0x1cd7d0(0x1a6)] = Date[_0x1cd7d0(0x1ae)]() + _0x28c749),
        log(_0x1cd7d0(0x1a5) + formatTime(_0x21a005[_0x4c0afb(0x150)]));
    } catch (_0x30a2ee) {
      log(_0x1cd7d0(0x1a8) + _0x30a2ee[_0x1cd7d0(0x1a1)]);
    }
  },
  getAssisterrAgents = async (_0xead8c0, _0x3bc09a) => {
    const _0x2b20eb = _0x1fa7,
      _0x134fea = _0x21cb09,
      _0x326b76 = _0x289136;
    try {
      log(_0x326b76(0x180));
      const _0xd4b4d = await axios[_0x326b76(0x1a4)](_0x134fea(0x178), {
          headers: {
            Authorization: _0x326b76(0x196) + _0xead8c0,
            "User-Agent": _0x3bc09a,
          },
        }),
        _0x22b823 = _0xd4b4d[_0x326b76(0x18d)][_0x326b76(0x17a)](
          (_0x3b0bb0) => _0x3b0bb0[_0x2b20eb(0x144)],
        );
      return (
        log(_0x134fea(0x15b) + _0x22b823[_0x326b76(0x19a)] + _0x326b76(0x1af)),
        _0x22b823
      );
    } catch (_0xc7df0a) {
      return log(_0x326b76(0x177) + _0xc7df0a[_0x326b76(0x1a1)]), [];
    }
  },
  getRandomAgent = (_0x2ab658) => {
    const _0xcaa777 = _0x21cb09,
      _0x3ab546 = _0x289136,
      _0x80fba0 = Math[_0x3ab546(0x17b)](
        Math[_0xcaa777(0x152)]() * _0x2ab658[_0x3ab546(0x19a)],
      );
    return _0x2ab658[_0x80fba0];
  },
  interactWithAgent = async (_0x21fcc2, _0xbcdb53, _0x476b0c, _0x1c13ae) => {
    const _0x39aded = _0x21cb09,
      _0x842537 = _0x289136;
    try {
      const _0x14d3eb = await axios[_0x842537(0x172)](
          _0x39aded(0x178) + _0x476b0c + _0x842537(0x199),
          { query: _0x1c13ae },
          {
            headers: {
              Authorization: _0x842537(0x196) + _0x21fcc2,
              "User-Agent": _0xbcdb53,
            },
          },
        ),
        _0x69bbca = _0x14d3eb[_0x39aded(0x195)];
      log(_0x842537(0x189) + _0x69bbca),
        await axios[_0x842537(0x172)](
          _0x842537(0x181) + _0x476b0c + _0x842537(0x185) + _0x69bbca + "/",
          { query: _0x1c13ae },
          {
            headers: {
              Authorization: _0x842537(0x196) + _0x21fcc2,
              "User-Agent": _0xbcdb53,
            },
          },
        ),
        log(_0x39aded(0x19f));
    } catch (_0xab26c9) {
      log(_0x842537(0x19e) + _0xab26c9[_0x842537(0x1a1)]);
    }
  },
  interactWithAgents = async (_0x1e52d3, _0x243672) => {
    const _0x598328 = _0x1fa7,
      _0x29a37e = _0x21cb09,
      _0x14a37d = _0x289136;
    try {
      log(_0x29a37e(0x166));
      const _0x4490ed = await getAssisterrAgents(_0x1e52d3, _0x243672);
      if (_0x4490ed[_0x14a37d(0x19a)] > 0x0) {
        const _0x1ac7fa = getRandomAgent(_0x4490ed);
        if (_0x1ac7fa[_0x14a37d(0x18b)]?.[_0x598328(0x151)] > 0x0) {
          const _0xa1c0b1 =
            _0x1ac7fa[_0x14a37d(0x18b)][
              Math["floor"](
                Math[_0x29a37e(0x152)]() *
                  _0x1ac7fa[_0x29a37e(0x159)][_0x14a37d(0x19a)],
              )
            ];
          log(
            _0x14a37d(0x1a2) +
              _0x1ac7fa[_0x14a37d(0x191)] +
              "\x20(" +
              _0x1ac7fa[_0x29a37e(0x16d)] +
              ")",
          ),
            await interactWithAgent(
              _0x1e52d3,
              _0x243672,
              _0x1ac7fa[_0x29a37e(0x16d)],
              _0xa1c0b1,
            );
        }
      }
    } catch (_0x3c8bb6) {
      log(_0x598328(0x147) + _0x3c8bb6[_0x14a37d(0x1a1)]);
    }
  };
function _0x37ef(_0x106b99, _0x235bb9) {
  const _0x389a35 = _0x163e();
  return (
    (_0x37ef = function (_0x219d2f, _0x6e4b0f) {
      _0x219d2f = _0x219d2f - 0x14a;
      let _0x4d7cb6 = _0x389a35[_0x219d2f];
      return _0x4d7cb6;
    }),
    _0x37ef(_0x106b99, _0x235bb9)
  );
}
function _0x1310(_0x2010eb, _0x1d31d0) {
  const _0x299a5e = _0x1de8();
  return (
    (_0x1310 = function (_0x59d3b3, _0x5e0687) {
      _0x59d3b3 = _0x59d3b3 - 0x15a;
      let _0xcf7f7d = _0x299a5e[_0x59d3b3];
      return _0xcf7f7d;
    }),
    _0x1310(_0x2010eb, _0x1d31d0)
  );
}
function printHeader() {
  const _0x589891 = _0x21cb09,
    _0x4d106c = _0x289136,
    _0x2abc86 = "="[_0x589891(0x15c)](0x32),
    _0x5d4338 = _0x4d106c(0x167),
    _0x2311fa = _0x589891(0x198),
    _0x36bbb2 = 0x32,
    _0x5ec1d4 = Math[_0x4d106c(0x17b)](
      (_0x36bbb2 - _0x5d4338[_0x4d106c(0x19a)]) / 0x2,
    ),
    _0x4744cb = Math[_0x4d106c(0x17b)](
      (_0x36bbb2 - _0x2311fa[_0x4d106c(0x19a)]) / 0x2,
    ),
    _0xc40647 = _0x5d4338[_0x589891(0x16c)](
      _0x5ec1d4 + _0x5d4338[_0x4d106c(0x19a)],
    )[_0x4d106c(0x175)](_0x36bbb2),
    _0xe93760 = _0x2311fa[_0x589891(0x16c)](
      _0x4744cb + _0x2311fa[_0x4d106c(0x19a)],
    )[_0x4d106c(0x175)](_0x36bbb2);
  console[_0x4d106c(0x15d)](_0x2abc86),
    console[_0x4d106c(0x15d)](_0xc40647),
    console[_0x4d106c(0x15d)](_0xe93760),
    console[_0x4d106c(0x15d)](_0x2abc86);
}
const main = async () => {
  const _0x4665e1 = _0x1fa7,
    _0x4505ae = _0x21cb09,
    _0x4e93e8 = _0x289136,
    _0x5c7e93 = loadAccounts();
  while (!![]) {
    printHeader();
    const _0x445957 = Date["now"]();
    let _0x36474d = Infinity;
    for (let _0x47603c of _0x5c7e93[_0x4e93e8(0x1ad)]) {
      log("="[_0x4505ae(0x15c)](0x32)),
        log(
          _0x4e93e8(0x16b) +
            _0x47603c[_0x4e93e8(0x1a3)][_0x4e93e8(0x194)](-0x4),
        );
      const _0x5e5c0a = getRandomUserAgent(),
        _0x367307 = await loginAndGetTokens(_0x47603c, _0x5e5c0a),
        _0x19fcb5 = await checkReferralStatus(_0x367307, _0x5e5c0a, _0x47603c);
      if (!_0x19fcb5) continue;
      !_0x47603c[_0x4e93e8(0x1a6)] || _0x47603c[_0x4505ae(0x150)] <= _0x445957
        ? await claimDailyPoints(_0x367307, _0x5e5c0a, _0x47603c)
        : log(_0x4505ae(0x158) + formatTime(_0x47603c[_0x4e93e8(0x1a6)])),
        await interactWithAgents(_0x367307, _0x5e5c0a),
        _0x47603c[_0x4e93e8(0x1a6)] &&
          _0x47603c[_0x4e93e8(0x1a6)] > _0x445957 &&
          (_0x36474d = Math[_0x4505ae(0x182)](
            _0x36474d,
            _0x47603c[_0x4e93e8(0x1a6)],
          )),
        log(
          _0x4e93e8(0x183) + _0x47603c["private_key"][_0x4e93e8(0x194)](-0x4),
        ),
        log("="[_0x4e93e8(0x17d)](0x32) + "\x0a");
    }
    saveAccounts(_0x5c7e93);
    let _0x18ec1e = Math[_0x4e93e8(0x15e)](
      0x0,
      _0x36474d - Date[_0x4e93e8(0x1ae)](),
    );
    _0x18ec1e === Infinity
      ? ((_0x18ec1e = 0x1 * 0x3c * 0x3c * 0x3e8), log(_0x4665e1(0x137)))
      : log(
          _0x4e93e8(0x170) +
            (_0x18ec1e / (0x3e8 * 0x3c * 0x3c))[_0x4e93e8(0x186)](0x2) +
            _0x4505ae(0x1a1),
        ),
      await delay(_0x18ec1e);
  }
};
main();
function _0x27d4() {
  const _0x3aa43e = [
    "??\x20Starting\x20interaction\x20with\x20agents...",
    "143jgbxSy",
    "toLocaleString",
    "83178WMTTvG",
    "Bearer\x20",
    "39qgLJJO",
    "parse",
    "??\x20Invite\x20check\x20is\x20disabled.",
    "9lEKMJK",
    "??\x20Saving\x20updated\x20accounts\x20to\x20accounts.json...",
    "??\x20Created\x20chat\x20session:\x20",
    "8904210tQUEBe",
    "push",
    "now",
    "99505GcCkEe",
    "https://api.assisterr.ai/incentive/users/me/",
    "??\x20Finished\x20processing\x20account\x20ending\x20in\x20...",
    "176enQnpn",
    "points",
    "Bot\x20created\x20by:\x20https://t.me/airdropwithmeh",
    "name",
    "8642700jGsoZA",
    "writeFileSync",
    "repeat",
    "sign",
    "https://api.assisterr.ai/incentive/slm/",
    "tweetnacl",
    "max",
    "?\x20Accounts\x20saved\x20successfully.",
    "2811oCuBst",
    "?\x20Login\x20failed.\x20Please\x20check\x20account\x20details.",
    "??\x20Skipping\x20account.\x20Refferal\x20does\x20not\x20match\x20Author\x27s\x20ID.",
    "?\x20Waiting\x20for\x20",
    "??\x20Not\x20yet\x20time\x20to\x20claim.\x20Next\x20claim\x20time:\x20",
    "https://api.assisterr.ai/incentive/auth/login/get_message/",
    "conversation_starts",
    "fromSecretKey",
    "?\x20No\x20upcoming\x20claim\x20times\x20found.\x20Waiting\x20for\x201\x20hour\x20before\x20next\x20attempt.",
    "651020OghjIM",
    "??\x20Attempting\x20to\x20claim\x20daily\x20points...",
    "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
    "25976sdhwmi",
    "??\x20Loading\x20accounts\x20from\x20accounts.json...",
    "accounts",
    "https://api.assisterr.ai/incentive/users/me/daily_points/",
    "?\x20Error\x20fetching\x20message:",
    "3168944gdMsPF",
    "secretKey",
    "trim",
    "9opGOJK",
    "slm_agents",
    "message",
    "66bceba8f6e625e389d8d7f1",
    "??\x20Error\x20during\x20chat\x20interaction:\x20",
    "??\x20Starting\x20process\x20for\x20account\x20with\x20private\x20key\x20ending\x20in\x20...",
    "??\x20Fetching\x20message\x20for\x20signing...",
    "reverse",
    "?\x20Error\x20checking\x20referral\x20status:\x20",
    "902944EMfXxA",
    "\x20agents",
    "filter",
    "90390DObdeN",
    "?\x20Message\x20received\x20for\x20signing.",
    "length",
    "min",
    "utf-8",
    "readFileSync",
    "user-agent.txt",
    "112798iXpuSW",
    "split",
    "138TcdLwR",
    "153656ElxqgQ",
    "4GKDfoY",
    "toString",
    "?\x20Message\x20signed.",
    "detached",
    "next_claim_time",
    "toFixed",
    "?\x20Login\x20successful\x20and\x20tokens\x20received.",
    "??\x20Daily\x20points\x20claimed.\x20Current\x20points:\x20",
    "??\x20Signing\x20the\x20message...",
    "102uqpeHI",
    "1021554GIAWMt",
    "/chat/create_session/",
    "??\x20Attempting\x20to\x20log\x20in\x20with\x20signed\x20message...",
    "116uURVWa",
    "axios",
    "Auto\x20Claim\x20Assisterr",
    "\x20hours\x20until\x20the\x20next\x20claim\x20attempt.",
    "790574pAxsoN",
    "??\x20Successfully\x20interacted\x20with\x20agent",
    "indexOf",
    "floor",
    "6ZLceTI",
    "?\x20Next\x20claim\x20available\x20at:\x20",
    "3342036OTkZCN",
    "slug",
    "stringify",
    "data",
    "shift",
    "get",
  ];
  _0x27d4 = function () {
    return _0x3aa43e;
  };
  return _0x27d4();
}
function _0x1fa7(_0x48aed3, _0x353f10) {
  const _0x27d462 = _0x27d4();
  return (
    (_0x1fa7 = function (_0x1fa728, _0x3455c9) {
      _0x1fa728 = _0x1fa728 - 0x133;
      let _0x59e436 = _0x27d462[_0x1fa728];
      return _0x59e436;
    }),
    _0x1fa7(_0x48aed3, _0x353f10)
  );
}
function _0x163e() {
  const _0x503fdc = _0x1fa7,
    _0x44fdda = [
      _0x503fdc(0x17b),
      _0x503fdc(0x133),
      _0x503fdc(0x135),
      "??\x20Chatting\x20with\x20",
      "?\x20Found\x20",
      _0x503fdc(0x18e),
      _0x503fdc(0x168),
      _0x503fdc(0x195),
      _0x503fdc(0x13e),
      "private_key",
      _0x503fdc(0x192),
      _0x503fdc(0x148),
      _0x503fdc(0x166),
      "flatMap",
      _0x503fdc(0x141),
      _0x503fdc(0x177),
      "Invalid\x20Base58\x20character",
      "?\x20Error\x20fetching\x20agents:\x20",
      _0x503fdc(0x17c),
      _0x503fdc(0x162),
      _0x503fdc(0x17d),
      "padStart",
      _0x503fdc(0x172),
      _0x503fdc(0x13b),
      _0x503fdc(0x18b),
      _0x503fdc(0x16d),
      _0x503fdc(0x16e),
      _0x503fdc(0x171),
      "144pqPuqW",
      _0x503fdc(0x15a),
      _0x503fdc(0x187),
      _0x503fdc(0x175),
      "post",
      _0x503fdc(0x190),
      _0x503fdc(0x17f),
      _0x503fdc(0x14f),
      _0x503fdc(0x176),
      _0x503fdc(0x197),
      "880672mEWrPb",
      _0x503fdc(0x16f),
      _0x503fdc(0x151),
      _0x503fdc(0x169),
      _0x503fdc(0x196),
      _0x503fdc(0x152),
      _0x503fdc(0x161),
      _0x503fdc(0x165),
      _0x503fdc(0x182),
      _0x503fdc(0x158),
      "@solana/web3.js",
      "accounts.json",
      _0x503fdc(0x154),
      _0x503fdc(0x181),
      "publicKey",
      "58DgDvQr",
      _0x503fdc(0x193),
      _0x503fdc(0x159),
      _0x503fdc(0x15c),
      _0x503fdc(0x13c),
      "1000355SMgzcp",
      _0x503fdc(0x134),
      "927ySUanv",
      _0x503fdc(0x139),
      _0x503fdc(0x174),
      _0x503fdc(0x15b),
      _0x503fdc(0x142),
      _0x503fdc(0x18a),
      _0x503fdc(0x136),
      _0x503fdc(0x14e),
      _0x503fdc(0x150),
      _0x503fdc(0x179),
      _0x503fdc(0x157),
      _0x503fdc(0x189),
      _0x503fdc(0x16c),
      _0x503fdc(0x178),
      _0x503fdc(0x16a),
      _0x503fdc(0x13f),
      "218840xVKxJd",
      _0x503fdc(0x14b),
      _0x503fdc(0x160),
      "slice",
      _0x503fdc(0x153),
      _0x503fdc(0x184),
      _0x503fdc(0x149),
      _0x503fdc(0x186),
      "log",
      _0x503fdc(0x145),
      _0x503fdc(0x18d),
      _0x503fdc(0x18c),
      "from",
      _0x503fdc(0x18f),
      _0x503fdc(0x191),
      _0x503fdc(0x194),
      _0x503fdc(0x17e),
      _0x503fdc(0x15e),
      "949350asBCwi",
      "random",
      "??\x20Fetching\x20Assisterr\x20agents...",
      "??\x20Error\x20interacting\x20with\x20agent:\x20",
      "/chat/",
      _0x503fdc(0x183),
    ];
  return (
    (_0x163e = function () {
      return _0x44fdda;
    }),
    _0x163e()
  );
}
